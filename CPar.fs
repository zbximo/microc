// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | ADDOPE
  | MINUSOPE
  | TIMESOPE
  | DIVOPE
  | MODOPE
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | PRINTFLOAT
  | RETURN
  | VOID
  | WHILE
  | FLOAT
  | FOR
  | IN
  | RANGE
  | QUEM
  | COLON
  | SWITCH
  | CASE
  | DEFAULT
  | DO
  | UNTIL
  | CSTFLOAT of (float32)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_ADDOPE
    | TOKEN_MINUSOPE
    | TOKEN_TIMESOPE
    | TOKEN_DIVOPE
    | TOKEN_MODOPE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_PRINTFLOAT
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FLOAT
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_RANGE
    | TOKEN_QUEM
    | TOKEN_COLON
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_CSTFLOAT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_StmtS
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFPLUS  -> 25 
  | SELFMINUS  -> 26 
  | ADDOPE  -> 27 
  | MINUSOPE  -> 28 
  | TIMESOPE  -> 29 
  | DIVOPE  -> 30 
  | MODOPE  -> 31 
  | CHAR  -> 32 
  | ELSE  -> 33 
  | IF  -> 34 
  | INT  -> 35 
  | NULL  -> 36 
  | PRINT  -> 37 
  | PRINTLN  -> 38 
  | PRINTFLOAT  -> 39 
  | RETURN  -> 40 
  | VOID  -> 41 
  | WHILE  -> 42 
  | FLOAT  -> 43 
  | FOR  -> 44 
  | IN  -> 45 
  | RANGE  -> 46 
  | QUEM  -> 47 
  | COLON  -> 48 
  | SWITCH  -> 49 
  | CASE  -> 50 
  | DEFAULT  -> 51 
  | DO  -> 52 
  | UNTIL  -> 53 
  | CSTFLOAT _ -> 54 
  | CSTSTRING _ -> 55 
  | NAME _ -> 56 
  | CSTINT _ -> 57 
  | CSTBOOL _ -> 58 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFPLUS 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_ADDOPE 
  | 28 -> TOKEN_MINUSOPE 
  | 29 -> TOKEN_TIMESOPE 
  | 30 -> TOKEN_DIVOPE 
  | 31 -> TOKEN_MODOPE 
  | 32 -> TOKEN_CHAR 
  | 33 -> TOKEN_ELSE 
  | 34 -> TOKEN_IF 
  | 35 -> TOKEN_INT 
  | 36 -> TOKEN_NULL 
  | 37 -> TOKEN_PRINT 
  | 38 -> TOKEN_PRINTLN 
  | 39 -> TOKEN_PRINTFLOAT 
  | 40 -> TOKEN_RETURN 
  | 41 -> TOKEN_VOID 
  | 42 -> TOKEN_WHILE 
  | 43 -> TOKEN_FLOAT 
  | 44 -> TOKEN_FOR 
  | 45 -> TOKEN_IN 
  | 46 -> TOKEN_RANGE 
  | 47 -> TOKEN_QUEM 
  | 48 -> TOKEN_COLON 
  | 49 -> TOKEN_SWITCH 
  | 50 -> TOKEN_CASE 
  | 51 -> TOKEN_DEFAULT 
  | 52 -> TOKEN_DO 
  | 53 -> TOKEN_UNTIL 
  | 54 -> TOKEN_CSTFLOAT 
  | 55 -> TOKEN_CSTSTRING 
  | 56 -> TOKEN_NAME 
  | 57 -> TOKEN_CSTINT 
  | 58 -> TOKEN_CSTBOOL 
  | 61 -> TOKEN_end_of_input
  | 59 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtS 
    | 42 -> NONTERM_StmtS 
    | 43 -> NONTERM_StmtS 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Exprs 
    | 86 -> NONTERM_Exprs 
    | 87 -> NONTERM_Exprs1 
    | 88 -> NONTERM_Exprs1 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_Const 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_Const 
    | 93 -> NONTERM_ConstFloat 
    | 94 -> NONTERM_ConstFloat 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 61 
let _fsyacc_tagOfErrorTerminal = 59

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | ADDOPE  -> "ADDOPE" 
  | MINUSOPE  -> "MINUSOPE" 
  | TIMESOPE  -> "TIMESOPE" 
  | DIVOPE  -> "DIVOPE" 
  | MODOPE  -> "MODOPE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | PRINTFLOAT  -> "PRINTFLOAT" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FLOAT  -> "FLOAT" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | RANGE  -> "RANGE" 
  | QUEM  -> "QUEM" 
  | COLON  -> "COLON" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | ADDOPE  -> (null : System.Object) 
  | MINUSOPE  -> (null : System.Object) 
  | TIMESOPE  -> (null : System.Object) 
  | DIVOPE  -> (null : System.Object) 
  | MODOPE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | PRINTFLOAT  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | QUEM  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 19us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 100us; 54us; 101us; 54us; 108us; 54us; 112us; 54us; 116us; 54us; 131us; 54us; 134us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 126us; 17us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 77us; 100us; 102us; 101us; 102us; 108us; 109us; 112us; 113us; 116us; 117us; 131us; 132us; 134us; 135us; 7us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 125us; 74us; 127us; 101us; 128us; 2us; 65535us; 122us; 123us; 132us; 136us; 63us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 79us; 80us; 83us; 84us; 88us; 90us; 89us; 91us; 92us; 95us; 93us; 94us; 96us; 99us; 97us; 98us; 100us; 48us; 101us; 48us; 106us; 107us; 108us; 48us; 110us; 111us; 112us; 48us; 114us; 115us; 116us; 48us; 119us; 120us; 129us; 130us; 131us; 48us; 134us; 48us; 142us; 143us; 145us; 177us; 148us; 149us; 150us; 151us; 153us; 154us; 178us; 155us; 179us; 156us; 180us; 157us; 187us; 158us; 188us; 159us; 189us; 160us; 190us; 161us; 191us; 162us; 192us; 163us; 193us; 164us; 194us; 165us; 195us; 166us; 196us; 167us; 197us; 168us; 198us; 169us; 199us; 170us; 200us; 171us; 201us; 172us; 202us; 173us; 203us; 175us; 206us; 174us; 217us; 176us; 220us; 177us; 63us; 65535us; 37us; 139us; 40us; 139us; 43us; 139us; 50us; 139us; 57us; 139us; 58us; 139us; 61us; 139us; 62us; 139us; 64us; 139us; 65us; 139us; 69us; 139us; 70us; 139us; 73us; 139us; 74us; 139us; 76us; 139us; 79us; 139us; 83us; 139us; 88us; 139us; 89us; 139us; 92us; 139us; 93us; 139us; 96us; 139us; 97us; 139us; 100us; 139us; 101us; 139us; 106us; 139us; 108us; 139us; 110us; 139us; 112us; 139us; 114us; 139us; 116us; 139us; 119us; 139us; 129us; 139us; 131us; 139us; 134us; 139us; 142us; 139us; 145us; 139us; 148us; 139us; 150us; 139us; 153us; 139us; 178us; 139us; 179us; 139us; 180us; 139us; 187us; 139us; 188us; 139us; 189us; 139us; 190us; 139us; 191us; 139us; 192us; 139us; 193us; 139us; 194us; 139us; 195us; 139us; 196us; 139us; 197us; 139us; 198us; 139us; 199us; 139us; 200us; 139us; 201us; 139us; 202us; 139us; 203us; 139us; 206us; 140us; 217us; 139us; 220us; 139us; 64us; 65535us; 37us; 141us; 40us; 141us; 43us; 141us; 50us; 141us; 57us; 141us; 58us; 141us; 61us; 141us; 62us; 141us; 64us; 141us; 65us; 141us; 69us; 141us; 70us; 141us; 73us; 141us; 74us; 141us; 76us; 141us; 79us; 141us; 83us; 141us; 88us; 141us; 89us; 141us; 92us; 141us; 93us; 141us; 96us; 141us; 97us; 141us; 100us; 141us; 101us; 141us; 106us; 141us; 108us; 141us; 110us; 141us; 112us; 141us; 114us; 141us; 116us; 141us; 119us; 141us; 129us; 141us; 131us; 141us; 134us; 141us; 142us; 141us; 145us; 141us; 148us; 141us; 150us; 141us; 153us; 141us; 178us; 141us; 179us; 141us; 180us; 141us; 187us; 141us; 188us; 141us; 189us; 141us; 190us; 141us; 191us; 141us; 192us; 141us; 193us; 141us; 194us; 141us; 195us; 141us; 196us; 141us; 197us; 141us; 198us; 141us; 199us; 141us; 200us; 141us; 201us; 141us; 202us; 141us; 203us; 141us; 206us; 141us; 214us; 216us; 217us; 141us; 220us; 141us; 70us; 65535us; 37us; 138us; 40us; 138us; 43us; 138us; 50us; 138us; 57us; 138us; 58us; 138us; 61us; 138us; 62us; 138us; 64us; 138us; 65us; 138us; 69us; 138us; 70us; 138us; 73us; 138us; 74us; 138us; 76us; 138us; 79us; 138us; 83us; 138us; 86us; 103us; 87us; 103us; 88us; 137us; 89us; 137us; 92us; 138us; 93us; 138us; 96us; 138us; 97us; 138us; 100us; 138us; 101us; 138us; 106us; 138us; 108us; 138us; 110us; 138us; 112us; 138us; 114us; 138us; 116us; 138us; 119us; 138us; 129us; 138us; 131us; 138us; 134us; 138us; 142us; 138us; 145us; 138us; 148us; 138us; 150us; 138us; 153us; 138us; 178us; 138us; 179us; 138us; 180us; 138us; 183us; 184us; 185us; 186us; 187us; 138us; 188us; 138us; 189us; 138us; 190us; 138us; 191us; 138us; 192us; 138us; 193us; 138us; 194us; 138us; 195us; 138us; 196us; 138us; 197us; 138us; 198us; 138us; 199us; 138us; 200us; 138us; 201us; 138us; 202us; 138us; 203us; 138us; 206us; 137us; 208us; 209us; 211us; 212us; 214us; 215us; 217us; 138us; 220us; 138us; 1us; 65535us; 145us; 146us; 2us; 65535us; 145us; 219us; 220us; 221us; 64us; 65535us; 37us; 204us; 40us; 204us; 43us; 204us; 50us; 204us; 57us; 204us; 58us; 204us; 61us; 204us; 62us; 204us; 64us; 204us; 65us; 204us; 69us; 204us; 70us; 204us; 73us; 204us; 74us; 204us; 76us; 204us; 79us; 204us; 83us; 204us; 88us; 204us; 89us; 204us; 92us; 204us; 93us; 204us; 96us; 204us; 97us; 204us; 100us; 204us; 101us; 204us; 106us; 204us; 108us; 204us; 110us; 204us; 112us; 204us; 114us; 204us; 116us; 204us; 119us; 204us; 129us; 204us; 131us; 204us; 134us; 204us; 142us; 204us; 145us; 204us; 148us; 204us; 150us; 204us; 153us; 204us; 178us; 204us; 179us; 204us; 180us; 204us; 187us; 204us; 188us; 204us; 189us; 204us; 190us; 204us; 191us; 204us; 192us; 204us; 193us; 204us; 194us; 204us; 195us; 204us; 196us; 204us; 197us; 204us; 198us; 204us; 199us; 204us; 200us; 204us; 201us; 204us; 202us; 204us; 203us; 204us; 206us; 204us; 214us; 204us; 217us; 204us; 220us; 204us; 64us; 65535us; 37us; 205us; 40us; 205us; 43us; 205us; 50us; 205us; 57us; 205us; 58us; 205us; 61us; 205us; 62us; 205us; 64us; 205us; 65us; 205us; 69us; 205us; 70us; 205us; 73us; 205us; 74us; 205us; 76us; 205us; 79us; 205us; 83us; 205us; 88us; 205us; 89us; 205us; 92us; 205us; 93us; 205us; 96us; 205us; 97us; 205us; 100us; 205us; 101us; 205us; 106us; 205us; 108us; 205us; 110us; 205us; 112us; 205us; 114us; 205us; 116us; 205us; 119us; 205us; 129us; 205us; 131us; 205us; 134us; 205us; 142us; 205us; 145us; 205us; 148us; 205us; 150us; 205us; 153us; 205us; 178us; 205us; 179us; 205us; 180us; 205us; 187us; 205us; 188us; 205us; 189us; 205us; 190us; 205us; 191us; 205us; 192us; 205us; 193us; 205us; 194us; 205us; 195us; 205us; 196us; 205us; 197us; 205us; 198us; 205us; 199us; 205us; 200us; 205us; 201us; 205us; 202us; 205us; 203us; 205us; 206us; 205us; 214us; 205us; 217us; 205us; 220us; 205us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 53us; 57us; 62us; 80us; 88us; 91us; 155us; 219us; 284us; 355us; 357us; 360us; 425us; 490us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 37us; 1us; 23us; 15us; 24us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 37us; 38us; 1us; 28us; 3us; 28us; 37us; 38us; 17us; 28us; 37us; 38us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 28us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 28us; 3us; 28us; 37us; 38us; 1us; 28us; 1us; 28us; 2us; 28us; 37us; 1us; 28us; 1us; 29us; 2us; 29us; 39us; 1us; 29us; 2us; 29us; 39us; 16us; 29us; 39us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 29us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 29us; 2us; 29us; 39us; 1us; 29us; 2us; 30us; 31us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 15us; 30us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 30us; 1us; 31us; 1us; 31us; 15us; 31us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 31us; 4us; 32us; 33us; 34us; 35us; 5us; 32us; 33us; 34us; 35us; 40us; 3us; 32us; 40us; 81us; 2us; 32us; 81us; 16us; 32us; 40us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 32us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 2us; 32us; 40us; 16us; 32us; 40us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 32us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 2us; 32us; 40us; 16us; 32us; 40us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 32us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 4us; 33us; 34us; 35us; 84us; 3us; 33us; 34us; 35us; 3us; 33us; 34us; 35us; 3us; 33us; 34us; 35us; 17us; 33us; 34us; 35us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 16us; 34us; 35us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 1us; 34us; 1us; 35us; 15us; 35us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 15us; 36us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 2us; 41us; 43us; 16us; 41us; 43us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 2us; 41us; 43us; 2us; 41us; 43us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 11us; 44us; 47us; 55us; 56us; 59us; 60us; 61us; 62us; 63us; 81us; 84us; 10us; 44us; 47us; 55us; 56us; 59us; 60us; 61us; 62us; 63us; 84us; 1us; 45us; 2us; 45us; 78us; 1us; 46us; 1us; 47us; 15us; 47us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 2us; 48us; 80us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 15us; 49us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 50us; 15us; 50us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 51us; 1us; 52us; 15us; 52us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 59us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 60us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 61us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 62us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 14us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 15us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 84us; 16us; 53us; 54us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 87us; 88us; 1us; 53us; 1us; 54us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 2us; 57us; 84us; 1us; 58us; 2us; 58us; 84us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 2us; 78us; 81us; 1us; 78us; 1us; 79us; 2us; 79us; 84us; 1us; 80us; 1us; 81us; 2us; 81us; 84us; 1us; 81us; 2us; 82us; 83us; 2us; 82us; 84us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 89us; 1us; 90us; 2us; 91us; 94us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 268us; 270us; 272us; 288us; 290us; 292us; 294us; 310us; 312us; 317us; 323us; 327us; 330us; 347us; 363us; 365us; 368us; 385us; 401us; 403us; 406us; 423us; 439us; 441us; 444us; 446us; 451us; 455us; 459us; 463us; 481us; 483us; 485us; 488us; 505us; 507us; 509us; 511us; 527us; 529us; 531us; 533us; 535us; 551us; 553us; 555us; 557us; 559us; 561us; 563us; 565us; 567us; 570us; 587us; 590us; 593us; 595us; 597us; 599us; 601us; 613us; 624us; 626us; 629us; 631us; 633us; 649us; 652us; 654us; 656us; 658us; 660us; 676us; 678us; 694us; 696us; 698us; 714us; 730us; 746us; 762us; 778us; 794us; 810us; 826us; 842us; 858us; 874us; 890us; 906us; 922us; 938us; 954us; 970us; 986us; 1002us; 1018us; 1033us; 1049us; 1065us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1094us; 1097us; 1099us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1143us; 1145us; 1147us; 1150us; 1152us; 1154us; 1157us; 1159us; 1162us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1177us; 1179us; 1181us; 1184us; 1186us; 1188us; 1190us; 1192us; 1194us; 1196us; |]
let _fsyacc_action_rows = 232
let _fsyacc_actionTableElements = [|4us; 16386us; 32us; 230us; 35us; 229us; 41us; 23us; 43us; 231us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 32us; 230us; 35us; 229us; 41us; 23us; 43us; 231us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 56us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 56us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 56us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 56us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 57us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 56us; 24us; 1us; 32768us; 1us; 25us; 3us; 16398us; 32us; 230us; 35us; 229us; 43us; 231us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 3us; 16398us; 32us; 230us; 35us; 229us; 43us; 231us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 3us; 32768us; 32us; 230us; 35us; 229us; 43us; 231us; 0us; 16401us; 25us; 16403us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 32us; 230us; 34us; 56us; 35us; 229us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 43us; 231us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 1us; 32768us; 4us; 39us; 0us; 16402us; 25us; 16403us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 32us; 230us; 34us; 56us; 35us; 229us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 43us; 231us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16404us; 1us; 32768us; 7us; 43us; 25us; 16403us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 32us; 230us; 34us; 56us; 35us; 229us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 43us; 231us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 33us; 65us; 0us; 16407us; 15us; 32768us; 7us; 49us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 0us; 16408us; 16us; 32768us; 1us; 206us; 7us; 51us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16409us; 15us; 32768us; 7us; 53us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 62us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 2us; 61us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 56us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 1us; 32768us; 33us; 64us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 56us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 74us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 2us; 73us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 56us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16413us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 2us; 32768us; 42us; 78us; 53us; 82us; 1us; 32768us; 1us; 79us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 81us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 0us; 16414us; 1us; 32768us; 1us; 83us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 85us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 0us; 16415us; 3us; 32768us; 1us; 89us; 22us; 214us; 56us; 210us; 3us; 32768us; 1us; 88us; 22us; 214us; 56us; 210us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 7us; 93us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 7us; 92us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 7us; 97us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 7us; 96us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 101us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 2us; 100us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 56us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 68us; 44us; 87us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16416us; 2us; 32768us; 5us; 217us; 45us; 104us; 1us; 32768us; 46us; 105us; 1us; 32768us; 1us; 106us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 16us; 32768us; 2us; 108us; 8us; 110us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16417us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 16us; 32768us; 2us; 112us; 8us; 114us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16418us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 116us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16419us; 1us; 32768us; 1us; 119us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 2us; 121us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 1us; 32768us; 3us; 122us; 2us; 32768us; 50us; 129us; 51us; 133us; 1us; 32768us; 4us; 124us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 48us; 131us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 2us; 16425us; 50us; 129us; 51us; 133us; 1us; 32768us; 48us; 134us; 22us; 32768us; 1us; 206us; 3us; 37us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 34us; 55us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 40us; 50us; 42us; 67us; 44us; 86us; 49us; 118us; 52us; 76us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16426us; 0us; 16427us; 10us; 16428us; 2us; 213us; 5us; 217us; 9us; 142us; 25us; 181us; 26us; 182us; 27us; 187us; 28us; 188us; 29us; 189us; 30us; 190us; 31us; 191us; 9us; 16428us; 5us; 217us; 9us; 142us; 25us; 181us; 26us; 182us; 27us; 187us; 28us; 188us; 29us; 189us; 30us; 190us; 31us; 191us; 0us; 16429us; 1us; 16429us; 2us; 207us; 0us; 16430us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 14us; 16431us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 1us; 16464us; 1us; 145us; 15us; 16469us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 1us; 32768us; 2us; 147us; 0us; 16432us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 1us; 16433us; 47us; 179us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 14us; 16434us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 0us; 16435us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 14us; 16436us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16437us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 48us; 180us; 14us; 16438us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16443us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16444us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16445us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16446us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16447us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 4us; 16448us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 1us; 16449us; 47us; 179us; 1us; 16450us; 47us; 179us; 1us; 16451us; 47us; 179us; 10us; 16452us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 10us; 16453us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 10us; 16454us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 10us; 16455us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 10us; 16456us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 10us; 16457us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 12us; 16458us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 14us; 32768us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 13us; 16459us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 6us; 218us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 16471us; 8us; 220us; 12us; 203us; 13us; 202us; 14us; 196us; 15us; 197us; 16us; 198us; 17us; 199us; 18us; 200us; 19us; 201us; 20us; 178us; 21us; 192us; 22us; 193us; 23us; 194us; 24us; 195us; 47us; 179us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16439us; 0us; 16440us; 3us; 32768us; 1us; 211us; 22us; 214us; 56us; 210us; 1us; 16441us; 5us; 217us; 3us; 32768us; 1us; 211us; 22us; 214us; 56us; 210us; 1us; 16442us; 5us; 217us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16460us; 0us; 16461us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16462us; 3us; 32768us; 1us; 211us; 22us; 214us; 56us; 210us; 1us; 16463us; 5us; 217us; 0us; 16464us; 3us; 32768us; 1us; 211us; 22us; 214us; 56us; 210us; 2us; 32768us; 2us; 213us; 5us; 217us; 0us; 16465us; 9us; 32768us; 1us; 206us; 10us; 208us; 21us; 224us; 22us; 214us; 36us; 226us; 54us; 227us; 56us; 210us; 57us; 222us; 58us; 223us; 1us; 16466us; 5us; 217us; 0us; 16467us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16468us; 0us; 16470us; 15us; 32768us; 1us; 206us; 10us; 208us; 11us; 148us; 21us; 224us; 22us; 214us; 25us; 183us; 26us; 185us; 36us; 226us; 37us; 150us; 38us; 152us; 39us; 153us; 54us; 227us; 56us; 144us; 57us; 222us; 58us; 223us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 2us; 32768us; 54us; 228us; 57us; 225us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 23us; 27us; 29us; 30us; 32us; 36us; 38us; 42us; 45us; 46us; 49us; 50us; 52us; 53us; 55us; 57us; 61us; 63us; 65us; 66us; 70us; 72us; 74us; 75us; 76us; 78us; 82us; 83us; 109us; 111us; 112us; 138us; 139us; 141us; 167us; 168us; 169us; 171us; 172us; 188us; 189us; 206us; 207us; 223us; 224us; 225us; 227us; 229us; 245us; 261us; 277us; 293us; 316us; 339us; 341us; 364us; 387us; 388us; 390us; 392us; 408us; 424us; 440us; 456us; 479us; 502us; 503us; 526us; 529us; 531us; 547us; 563us; 564us; 566us; 582us; 598us; 599us; 603us; 607us; 623us; 639us; 655us; 671us; 687us; 703us; 719us; 735us; 751us; 767us; 783us; 799us; 822us; 845us; 846us; 849us; 851us; 853us; 869us; 886us; 909us; 910us; 926us; 943us; 966us; 967us; 983us; 999us; 1022us; 1023us; 1025us; 1041us; 1057us; 1059us; 1062us; 1064us; 1065us; 1066us; 1067us; 1068us; 1069us; 1085us; 1101us; 1124us; 1127us; 1129us; 1152us; 1153us; 1154us; 1165us; 1175us; 1176us; 1178us; 1179us; 1195us; 1210us; 1212us; 1228us; 1230us; 1231us; 1247us; 1249us; 1265us; 1280us; 1281us; 1297us; 1312us; 1317us; 1333us; 1348us; 1353us; 1358us; 1363us; 1368us; 1373us; 1378us; 1380us; 1382us; 1384us; 1395us; 1406us; 1417us; 1428us; 1439us; 1450us; 1463us; 1478us; 1492us; 1508us; 1524us; 1540us; 1556us; 1572us; 1573us; 1574us; 1578us; 1580us; 1584us; 1586us; 1602us; 1618us; 1634us; 1650us; 1666us; 1682us; 1698us; 1714us; 1730us; 1746us; 1762us; 1778us; 1794us; 1810us; 1826us; 1842us; 1858us; 1859us; 1860us; 1876us; 1877us; 1881us; 1883us; 1884us; 1888us; 1891us; 1892us; 1902us; 1904us; 1905us; 1921us; 1922us; 1923us; 1939us; 1940us; 1941us; 1942us; 1945us; 1946us; 1947us; 1948us; 1949us; 1950us; 1951us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 6us; 6us; 9us; 8us; 10us; 12us; 7us; 7us; 5us; 5us; 9us; 4us; 3us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 3us; 5us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 16429us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 65535us; 16465us; 65535us; 65535us; 16467us; 65535us; 16468us; 16470us; 65535us; 16472us; 16473us; 16474us; 65535us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; |]
let _fsyacc_reductions ()  =    [| 
# 545 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "CPar.fsy"
                                                               Prog _1 
                   )
# 48 "CPar.fsy"
                 : Absyn.program));
# 565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               [] 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdecs));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdecs));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdec));
# 598 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               _1 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdec));
# 609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 77 "CPar.fsy"
                 : 'gentype_Vardec));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 88 "CPar.fsy"
                 : 'gentype_Vardesc));
# 632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               _2                                      
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Fundec));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 109 "CPar.fsy"
                 : 'gentype_Fundec));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               [] 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               _1 
                   )
# 115 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 725 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               [_1]     
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 748 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               Block _2 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Block));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               [] 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 130 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 131 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               _1 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Stmt));
# 804 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               _1 
                   )
# 136 "CPar.fsy"
                 : 'gentype_Stmt));
# 815 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 826 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Return None          
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 847 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1                   
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 858 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 883 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               DoWhile(_2,_5)       
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               DoUntil(_2,_5)       
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 907 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                        For(_3,_5,_7,_9) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                    ForRangeOne(_2,_6,_8) 
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                               ForRangeTwo(_2,_6,_8,_10) 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 948 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                                         ForRangeThree (_2,_6,_8,_10,_12)
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 963 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtS in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                     Switch(_3,_6)  
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtU));
# 988 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtU));
# 1000 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtU));
# 1012 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                                        For(_3,_5,_7,_9) 
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtU));
# 1026 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               [Case(_2, _4)]         
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtS));
# 1038 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               [Default(_3)]          
                   )
# 174 "CPar.fsy"
                 : 'gentype_StmtS));
# 1049 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtS in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Case(_2, _4) :: _5  
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtS));
# 1062 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Access _1           
                   )
# 180 "CPar.fsy"
                 : 'gentype_Expr));
# 1073 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               _1                  
                   )
# 181 "CPar.fsy"
                 : 'gentype_Expr));
# 1084 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               _1                  
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1095 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1107 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1119 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1130 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1141 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1151 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim1("printfloat", _2) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim3(_1,_3,_5)     
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1187 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               SelfOperation("I++", _1)
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1198 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               SelfOperation("I--", _1)
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1209 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               SelfOperation("++I", _2)
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1220 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               SelfOperation("--I", _2)
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               ComplexOperation("+=", _1, _3 ) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1243 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               ComplexOperation("-=", _1, _3 ) 
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               ComplexOperation("*=", _1, _3 ) 
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1267 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               ComplexOperation("/=", _1, _3 ) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1279 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               ComplexOperation("%=", _1, _3 ) 
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1291 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1303 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1315 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1327 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1339 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1351 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1363 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1375 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1387 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1399 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1411 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1423 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1435 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               CstI _1             
                   )
# 225 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1446 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               CstF _1             
                   )
# 226 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1457 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _2                  
                   )
# 227 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1468 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               Addr _2             
                   )
# 228 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1479 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               AccVar _1           
                   )
# 232 "CPar.fsy"
                 : 'gentype_Access));
# 1490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _2                  
                   )
# 233 "CPar.fsy"
                 : 'gentype_Access));
# 1501 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 234 "CPar.fsy"
                 : 'gentype_Access));
# 1512 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 235 "CPar.fsy"
                 : 'gentype_Access));
# 1523 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 236 "CPar.fsy"
                 : 'gentype_Access));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               []       
                   )
# 240 "CPar.fsy"
                 : 'gentype_Exprs));
# 1545 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               _1       
                   )
# 241 "CPar.fsy"
                 : 'gentype_Exprs));
# 1556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               [_1]     
                   )
# 245 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1567 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 246 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               _1       
                   )
# 250 "CPar.fsy"
                 : 'gentype_Const));
# 1590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               _1       
                   )
# 251 "CPar.fsy"
                 : 'gentype_Const));
# 1601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               - _2     
                   )
# 252 "CPar.fsy"
                 : 'gentype_Const));
# 1612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               -1       
                   )
# 253 "CPar.fsy"
                 : 'gentype_Const));
# 1622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               _1       
                   )
# 256 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               - _2     
                   )
# 257 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               TypI     
                   )
# 260 "CPar.fsy"
                 : 'gentype_Type));
# 1654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               TypC     
                   )
# 261 "CPar.fsy"
                 : 'gentype_Type));
# 1664 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                              TypF      
                   )
# 262 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1675 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 62;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
